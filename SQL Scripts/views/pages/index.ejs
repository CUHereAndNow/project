<!-- views/pages/index.ejs -->

<!DOCTYPE html>
<html lang="en">

<head>
     <link rel="stylesheet" href="https://openlayers.org/en/v4.6.4/css/ol.css" type="text/css">
   
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <% include ../partials/head %>
    
	<!-- The line below is only needed for old environments like Internet Explorer and Android 4.x -->
	<script src="https://cdn.polyfill.io/v2/polyfill.min.js?features=requestAnimationFrame,Element.prototype.classList,URL"></script>
	<script src="https://openlayers.org/en/v4.6.4/build/ol.js"></script>
   
    <!-- This stuff is for map style -->
	<style>
         .ol-popup {
             position: absolute;
             background-color: white;
             -webkit-filter: drop-shadow(0 1px 4px rgba(0,0,0,0.2));
             filter: drop-shadow(0 1px 4px rgba(0,0,0,0.2));
             padding: 15px;
             border-radius: 10px;
             border: 1px solid #cccccc;
             bottom: 12px;
             left: -50px;
             min-width: 280px;
         }
         .ol-popup:after, .ol-popup:before {
             top: 100%;
             border: solid transparent;
             content: " ";
             height: 0;
             width: 0;
             position: absolute;
             pointer-events: none;
         }
         .ol-popup:after {
             border-top-color: white;
             border-width: 10px;
             left: 48px;
             margin-left: -10px;
         }
         .ol-popup:before {
             border-top-color: #cccccc;
             border-width: 11px;
             left: 48px;
             margin-left: -11px;
         }
         .ol-popup-closer {
             text-decoration: none;
             position: absolute;
             top: 2px;
             right: 8px;
         }
         .ol-popup-closer:after {
             content: "âœ–";
         }

         a.skiplink {
             position: absolute;
             clip: rect(1px, 1px, 1px, 1px);
             padding: 0;
             border: 0;
             height: 1px;
             width: 1px;
             overflow: hidden;
         }
         a.skiplink:focus {
             clip: auto;
             height: auto;
             width: auto;
             background-color: #fff;
             padding: 0.3em;
         }
         #map:focus {
             outline: #4A74A8 solid 0.15em;
         }
	</style>
        
        
</head>

<img src="http://i68.tinypic.com/2i1yza0.png" style="max-width: 10%; height:auto; margin-top: -210px" alt="CU Here and Now Logo"></img>


<body style="background:#565A5C; background: gray;">
	
 
 <div class="conatiner1">
      <button class="btn btn-default one" title="Computers, Whiteboards..." onclick="myFunction()">Aden Hall (A)</button>
      <div id="Aden" class="dropdown-content">
        <ul>8 Computers</ul>
        <ul>Whiteboards</ul>
        <ul>1 Printer</ul>
        <ul>Vending Machine</ul>
        <ul>3 Study Rooms</ul>
        <ul>Public Phone</ul>
        <ul>Chalkboards</ul>
        <ul>Water Bottle Station</ul>
        <ul>TV, Pool, Ping Pong Table</ul>
		<% include ../partials/Aden %>
      </div>

      <button class="btn btn-default one" title="Study Room..." onclick="myFunction2()">Crossman Hall (B)</button>
      <div id="Crosman" class="dropdown-content">
        <ul>1 Study Room</ul>
        <ul>Pool Table</ul>
        <% include ../partials/CrossMan %>
      </div>

      <button class="btn btn-default one" title="Study Rooms, Chalkboards..." onclick="myFunction3()">Brackett Hall (C)</button>
      <div id="Brackett" class="dropdown-content">
        <ul>Whiteboards</ul>
        <ul>2 Study Rooms</ul>
        <ul>Chalkboards</ul>
        <ul>Piano</ul>
        <ul>Waterbottle Station</ul>
		<% include ../partials/Brackett %>
      </div>

      <button class="btn btn-default one" title="Study Room..." onclick="myFunction4()">Cockerell Hall (D)</button>
      <div id="Cockerell" class="dropdown-content">
        <ul>Whiteboards</ul>
		<% include ../partials/Cockerell %>
      </div>

      <button class="btn btn-default one" title="Whiteboards, Study Rooms..." onclick="myFunction5()">Farrand Hall (E)</button>
      <div id="Farrand" class="dropdown-content">
        <ul>Whiteboards</ul>
        <ul>5 Study Rooms</ul>
        <ul>TV</ul>
        <ul>Water Bottle Station, 8 Individual, 2 Each Floor</ul>
        <ul>Classroom</ul>
		<% include ../partials/Farrand %>
      </div>

      <button class="btn btn-default one" title="Whiteboards, Vending Machine..." onclick="myFunction6()">Hallet Hall (F)</button>
      <div id="Hallet" class="dropdown-content">
        <ul>Whiteboards</ul>
        <ul>3 Study Rooms</ul>
        <ul>Vending Machine</ul>
        <ul>Public Phone</ul>
        <ul>Ping Pong Table</ul>
        <ul>TV</ul>
        <ul>Ball Pit</ul>
        <ul>Pool Table</ul>
        <ul>Classroom</ul>
		<% include ../partials/Hallet %>
      </div>
      <% include ../partials/Tags %>

  </div>

	
   

  <script>
  
    /* When the user clicks on the button, 
    toggle between hiding and showing the dropdown content */
    function myFunction() {
        document.getElementById("Aden").classList.toggle("show");
    }

    // Close the dropdown if the user clicks outside of it
    window.onclick = function(event) {
      if (!event.target.matches('.one')) {

        var dropdowns = document.getElementsByClassName("dropdown-content");
        var i;
        for (i = 0; i < dropdowns.length; i++) {
          var openDropdown = dropdowns[i];
          if (openDropdown.classList.contains('show')) {
            openDropdown.classList.remove('show');
          }
        }
      }
    }

        /* When the user clicks on the button, 
    toggle between hiding and showing the dropdown content */
    function myFunction2() {
        document.getElementById("Crosman").classList.toggle("show");
    }

    // Close the dropdown if the user clicks outside of it
    window.onclick = function(event) {
      if (!event.target.matches('.one')) {

        var dropdowns = document.getElementsByClassName("dropdown-content");
        var i;
        for (i = 0; i < dropdowns.length; i++) {
          var openDropdown = dropdowns[i];
          if (openDropdown.classList.contains('show')) {
            openDropdown.classList.remove('show');
          }
        }
      }
    }

    /* When the user clicks on the button, 
    toggle between hiding and showing the dropdown content */
    function myFunction3() {
        document.getElementById("Brackett").classList.toggle("show");
    }

    // Close the dropdown if the user clicks outside of it
    window.onclick = function(event) {
      if (!event.target.matches('.one')) {

        var dropdowns = document.getElementsByClassName("dropdown-content");
        var i;
        for (i = 0; i < dropdowns.length; i++) {
          var openDropdown = dropdowns[i];
          if (openDropdown.classList.contains('show')) {
            openDropdown.classList.remove('show');
          }
        }
      }
    }

        /* When the user clicks on the button, 
    toggle between hiding and showing the dropdown content */
    function myFunction4() {
        document.getElementById("Cockerell").classList.toggle("show");
    }

    // Close the dropdown if the user clicks outside of it
    window.onclick = function(event) {
      if (!event.target.matches('.one')) {

        var dropdowns = document.getElementsByClassName("dropdown-content");
        var i;
        for (i = 0; i < dropdowns.length; i++) {
          var openDropdown = dropdowns[i];
          if (openDropdown.classList.contains('show')) {
            openDropdown.classList.remove('show');
          }
        }
      }
    }

    /* When the user clicks on the button, 
    toggle between hiding and showing the dropdown content */
    function myFunction5() {
        document.getElementById("Farrand").classList.toggle("show");
    }

    // Close the dropdown if the user clicks outside of it
    window.onclick = function(event) {
      if (!event.target.matches('.one')) {

        var dropdowns = document.getElementsByClassName("dropdown-content");
        var i;
        for (i = 0; i < dropdowns.length; i++) {
          var openDropdown = dropdowns[i];
          if (openDropdown.classList.contains('show')) {
            openDropdown.classList.remove('show');
          }
        }
      }
    }

        /* When the user clicks on the button, 
    toggle between hiding and showing the dropdown content */
    function myFunction6() {
        document.getElementById("Hallet").classList.toggle("show");
    }

    // Close the dropdown if the user clicks outside of it
    window.onclick = function(event) {
      if (!event.target.matches('.one')) {

        var dropdowns = document.getElementsByClassName("dropdown-content");
        var i;
        for (i = 0; i < dropdowns.length; i++) {
          var openDropdown = dropdowns[i];
          if (openDropdown.classList.contains('show')) {
            openDropdown.classList.remove('show');
          }
        }
      }
    }


  </script>

  <br>
  <br>





<!--  This stuff is for the map -->
	<a class="skiplink" href="#map">Go to map</a>
	<div class="container" >
		<div id="map" class="map" tabindex="0">
		</div>
		<div id="popup" class="ol-popup">
			<a href="#" id="popup-closer" class="ol-popup-closer"></a>
			<div id="popup-content">
			</div>
		</div>
	</div>
        
        
        
        
	<script>

         /**
          * Elements that make up the popup.
          */
         var container = document.getElementById('popup');
         var content = document.getElementById('popup-content');
         var closer = document.getElementById('popup-closer');

         /**
          * Create an overlay to anchor the popup to the map.
          */
         var overlay = new ol.Overlay({
             element: container,
             autoPan: true,
             autoPanAnimation: {
                 duration: 250
             }
         });

         /**
          * Add a click handler to hide the popup.
          * @return {boolean} Don't follow the href.
          */
         closer.onclick = function() {
             overlay.setPosition(undefined);
             closer.blur();
             return false;
         };

         var serverip = 'cuhereandnow.pagekite.me';
         //var serverip = '128.138.59.144';

         //OSM base map layer from render server
         var tileserver = new ol.layer.Tile({
             source: new ol.source.OSM({
                 attributions: [
                     ol.source.OSM.ATTRIBUTION
                 ],
                 crossOrigin: null,
                 url: 'http://' + serverip + '/hot/{z}/{x}/{y}.png'
             })
         });

         //GeoJSON building polygon layer
         var buildingLayer = new ol.layer.Vector({
             source: new ol.source.Vector({
                 crossOrigin: null,
                 //url: 'http://' + serverip + '/building_polygon.json',
                 url: 'building_polygon.json',
                 format: new ol.format.GeoJSON({
                     projection: 'EPSG:3857'
                 }),
             })
         });

         var LonLatCoordCU = [-105.2673, 40.0074];
         var MercCoordCU = ol.proj.fromLonLat(LonLatCoordCU); //Default is EPSG:3857
         var BoundingBox = ol.extent.boundingExtent([MercCoordCU, MercCoordCU-20]);
         //console.debug(BoundingBox);

         var map = new ol.Map({
             layers: [
                 // new ol.layer.Tile({
                    // source: new ol.source.OSM(),
                    // preload: 16
                 // })
                 tileserver,
                 buildingLayer
             ],
             overlays: [overlay],
             target: 'map',
             view: new ol.View({
                 //center: [0, 0],
                 //zoom: 0
                 //extent: BoundingBox,
                 //extent: [ -11718398.233182767, 4866650.685612886, -11718312.233182767, 4867030.685612886 ],
                 //TODO: Can a boundingbox be made in the current version of openlayers?  Right now there is a bug that when you zoom in the bounding box changes.
                 center: MercCoordCU,
                 minZoom: 16,
                 zoom: 16
             })
         });

         map.on('click', function(e) {
             map.forEachFeatureAtPixel(e.pixel, function(feature, layer) {
                 console.log("Click Event!");
                 console.log(e);
                 console.log(feature);
                 console.log(feature.N.name);
                 console.log(layer);

                 var coordinate = e.coordinate;
                 var hdms = ol.coordinate.toStringHDMS(ol.proj.transform(
                     coordinate, 'EPSG:3857', 'EPSG:4326'));
                 content.innerHTML = '<p>You clicked here:</p><code>' + hdms +
                                     '<br>' + feature.N.name +
                                     '</code>';
                 overlay.setPosition(coordinate);
             })
         });

	</script>
        
        <!-- End of MAp Stuff -->
  <br>
  <br>

  <div class="footer">
    <p><b><h4>
      Need help? Contact us!
      <br>
    </h4></b></p>
  </div>
  
  <br>

  <div class="contact">
    <p>Miva2659@colorado.edu</p>
    <p>Computer Science Major</p>
    <p>University of Colorado Boulder</p>
  </div>
  
  <br>
  <br>

  <!-- jQuery first, then Popper.js, then Bootstrap JS -->
  <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"
    crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
    crossorigin="anonymous"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
    crossorigin="anonymous"></script>
</body>
</html>
